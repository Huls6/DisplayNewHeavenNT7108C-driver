
#include "bitmapDisplay.h"

// Functie die de letter 'A' tot 'Z' omzet in 5x7 bitmaps
std::vector<uint8_t> getLetterBitmap(char letter) {
    switch (letter) {
    case 'A': return { 0x7E, 0x11, 0x11, 0x11, 0x7E, 0x00 };
    case 'B': return { 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00 };
    case 'C': return { 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00 };
    case 'D': return { 0x7F, 0x41, 0x41, 0x41, 0x3E, 0x00 };
    case 'E': return { 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00 };
    case 'F': return { 0x7F, 0x48, 0x48, 0x48, 0x40, 0x00 };
    case 'G': return { 0x3E, 0x41, 0x49, 0x49, 0x2E, 0x00 };
    case 'H': return { 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00 };
    case 'I': return { 0x00, 0x41, 0x7F, 0x41, 0x00 };       // Had al 0x00
    case 'J': return { 0x02, 0x01, 0x01, 0x01, 0x7E, 0x00 };
    case 'K': return { 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00 };
    case 'L': return { 0x7F, 0x01, 0x01, 0x01, 0x01, 0x00 };
    case 'M': return { 0x7F, 0x20, 0x10, 0x20, 0x7F, 0x00 };
    case 'N': return { 0x7F, 0x20, 0x10, 0x08, 0x7F, 0x00 };
    case 'O': return { 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00 };
    case 'P': return { 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00 };
    case 'Q': return { 0x3E, 0x41, 0x41, 0x21, 0x3E, 0x00 };
    case 'R': return { 0x7F, 0x48, 0x48, 0x48, 0x78, 0x00 };
    case 'S': return { 0x46, 0x49, 0x49, 0x49, 0x31, 0x00 };
    case 'T': return { 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00 };
    case 'U': return { 0x3F, 0x01, 0x01, 0x01, 0x3F, 0x00 };
    case 'V': return { 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00 };
    case 'W': return { 0x7F, 0x01, 0x1E, 0x01, 0x7F, 0x00 };
    case 'X': return { 0x63, 0x14, 0x08, 0x14, 0x63, 0x00 };
    case 'Y': return { 0x30, 0x0C, 0x03, 0x0C, 0x30, 0x00 };
    case 'Z': return { 0x61, 0x51, 0x49, 0x45, 0x43, 0x00 };

            // Kleine letters a-z
    case 'a': return { 0x20, 0x54, 0x54, 0x54, 0x78, 0x00 };
    case 'b': return { 0x7F, 0x48, 0x48, 0x48, 0x30, 0x00 };
    case 'c': return { 0x38, 0x44, 0x44, 0x44, 0x20, 0x00 };
    case 'd': return { 0x30, 0x48, 0x48, 0x48, 0x7F, 0x00 };
    case 'e': return { 0x38, 0x54, 0x54, 0x54, 0x18, 0x00 };
    case 'f': return { 0x08, 0x7E, 0x09, 0x01, 0x02, 0x00 };
    case 'g': return { 0x0C, 0x52, 0x52, 0x52, 0x3E, 0x00 };
    case 'h': return { 0x7F, 0x08, 0x08, 0x08, 0x70, 0x00 };
    case 'i': return { 0x48, 0x7D, 0x40, 0x00 };       // Had al 0x00
    case 'j': return { 0x20, 0x40, 0x40, 0x3D, 0x00 };       // Had al 0x00
    case 'k': return { 0x7F, 0x10, 0x28, 0x44, 0x00 };       // Had al 0x00
    case 'l': return { 0x41, 0x7F, 0x40, 0x00 };       // Had al 0x00
    case 'm': return { 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00 };
    case 'n': return { 0x7C, 0x08, 0x04, 0x04, 0x78, 0x00 };
    case 'o': return { 0x38, 0x44, 0x44, 0x44, 0x38, 0x00 };
    case 'p': return { 0x7C, 0x14, 0x14, 0x14, 0x08, 0x00 };
    case 'q': return { 0x08, 0x14, 0x14, 0x14, 0x7C, 0x00 };
    case 'r': return { 0x7C, 0x08, 0x04, 0x04, 0x08, 0x00 };
    case 's': return { 0x48, 0x54, 0x54, 0x54, 0x20, 0x00 };
    case 't': return { 0x04, 0x3F, 0x44, 0x40, 0x20, 0x00 };
    case 'u': return { 0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00 };
    case 'v': return { 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00 };
    case 'w': return { 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00 };
    case 'x': return { 0x44, 0x28, 0x10, 0x28, 0x44, 0x00 };
    case 'y': return { 0x0C, 0x50, 0x50, 0x50, 0x3C, 0x00 };
    case 'z': return { 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00 };

        //Getallen en procent teken
    case '0': return { 0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00 }; // 0
    case '1': return { 0x00, 0x42, 0x7F, 0x40, 0x00 }; // 1
    case '2': return { 0x62, 0x51, 0x49, 0x49, 0x46, 0x00 }; // 2
    case '3': return { 0x22, 0x41, 0x49, 0x49, 0x36, 0x00 }; // 3
    case '4': return { 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00 }; // 4
    case '5': return { 0x2F, 0x49, 0x49, 0x49, 0x31, 0x00 }; // 5
    case '6': return { 0x3E, 0x49, 0x49, 0x49, 0x32, 0x00 }; // 6
    case '7': return { 0x01, 0x71, 0x09, 0x05, 0x03, 0x00 }; // 7
    case '8': return { 0x36, 0x49, 0x49, 0x49, 0x36, 0x00 }; // 8
    case '9': return { 0x26, 0x49, 0x49, 0x49, 0x3E, 0x00 }; // 9

    // Speciale tekens
    case ' ': return { 0x00, 0x00, 0x00, 0x00 }; // Spatie
    case '!': return { 0x00, 0x5F, 0x00 }; // Uitroepteken
    case '?': return { 0x20, 0x40, 0x4D, 0x48, 0x30, 0x00 };
    case '.': return { 0x00, 0x40, 0x00 }; // Punt
    case ':': return { 0x00, 0x42, 0x00 }; // :
    case '%': return { 0x62, 0x64, 0x08, 0x13, 0x23, 0x00 }; // %
    case '*': return {0x06, 0x09, 0x09, 0x06, 0x00};  // celsius teken *
    case '|': return {0xFF};
    default: return { 0x00, 0x00, 0x00, 0x00 };  // Onbekend teken
    }

}

// Functie die de emoji's omzet in 5x7 bitmaps
std::vector<uint8_t> getEmojiBitmap(char emoji) {
    switch (emoji) {
        case 'B': return { 0x7E, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x66, 0x24, 0x3C }; // Lege batterij
        case 'M': return { 0x7E, 0x7E, 0x7E, 0x7E, 0x42, 0x42, 0x42, 0x66, 0x24, 0x3C }; // Halfvolle batterij
        case 'F': return { 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x3C, 0x3C }; // Volle batterij

    default: return { 0x00, 0x00, 0x00, 0x00 };  // Onbekend teken
    }

}